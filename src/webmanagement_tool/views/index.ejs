<html lang="en">

<head>

    <link href="./bower_components/bootstrap/dist/css/bootstrap.css" rel="stylesheet">
    <link href="./bower_components/awesomplete/awesomplete.css" rel="stylesheet">
    <link href="./bower_components/font-awesome/web-fonts-with-css/css/fontawesome.min.css" rel="stylesheet">
    


    <link href="/css/cards.css" rel="stylesheet">

    <link href="./main.css" rel="stylesheet">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="kaps avatar test side">
    <meta name="author" content="Marcel Ochsendorf">
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <title>PROJECT BOX MANAGER</title>




</head>

<body class="container">

    <header>
        <% include ./partials/header %>
    </header>








        <h5 class="section-title h1">PROJECTS</h5>
        <div class="row" id="project_cards_holder">
        </div>






   


    <footer>
        <% include ./partials/footer %>
    </footer>




    <script src="./bower_components/jquery/dist/jquery.js"></script>
    <script src="./bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script type='text/javascript' src='./bower_components/chart.js/dist/Chart.bundle.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script type='text/javascript' src='./bower_components/awesomplete/awesomplete.min.js'></script>




    <script>
        var socket = null;



        var projects_list_str= <%- projects %>;
        var projects_list_str_init = <%- projects %>;
        var project_list = null; 
        var card_html_template_str = "";

       




        function timeConverter(UNIX_timestamp, with_time = false) {
            try {
                var a = new Date(UNIX_timestamp * 1000);
                var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                var year = a.getFullYear();
                var month = months[a.getMonth()];
                var date = a.getDate();
                var hour = a.getHours();
                var min = a.getMinutes();
                var sec = a.getSeconds();
                if (with_time) {
                    return date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;
                } else {
                    return date + ' ' + month + ' ' + year;
                }
            } catch (error) {
                return UNIX_timestamp
            }
        }

        



function parse_project_list_and_gen_tables(_dt){
    //TODO 
    $("project_cards_holder").html("");
        if(card_html_template_str == ""){
            console.log("card_tmp_not_loaded");
            return;
        }
        for (let index = 0; index < _dt.length; index++) {
            const element = _dt[index];
            var card_html =  card_html_template_str;
            card_html= card_html.replace("__%%PROJECT_TITLE%%__",element.tile );
            card_html=card_html.replace("__%%PROJECT_TITLE_BACK%%__",element.tile  + "[REV "+element.revision+"]");
            card_html=card_html.replace("__%%PROJECT_DESC%%__",element.desc );
            card_html=card_html.replace("__%%PROJECT_LINK%%__","/project?id=" + element.project_id );
            card_html=card_html.replace("__%%PROJECT_ICON%%__","/img/np_project_564791_000000.png");
            $("#project_cards_holder").append(card_html);
        }
}

       
        
        $(document).ready(function () {
            console.log("ready!");
        
            $.get( "/card_template.html", function( data ) {
                card_html_template_str = data;

                 var objectConstructor = {}.constructor;
            if (projects_list_str.constructor === objectConstructor) {
                project_list = projects_list_str;
            } else {
                try {
                    project_list = JSON.parse(projects_list_str);
                } catch (err) {
                }
            }
            parse_project_list_and_gen_tables(project_list.projects);

            });

            
           



            socket = io();
            socket.emit('add user', {});

            socket.on('project_update', function (data) {
                var objectConstructor = {}.constructor;
                if (projects_list_str.constructor === objectConstructor) {
                    projects_list = data;
                } else {
                    try {
                        projects_list = JSON.parse(data);
                    } catch (err) {

                    }
                }
                parse_project_list_and_gen_tables(projects_list.projects);
            });

        });
    </script>

</body>

</html>